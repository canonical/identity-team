name: Integration Tests

on:
  workflow_call:
    inputs:
      container-name:
        description: Name of the application container to get logs from
        required: false
        type: string
      charm-config-path:
        description: Path to the application config file
        required: false
        type: string
      use-charmcraftcache:
        description: Enable usage of charmcraftcache
        required: false
        default: false
        type: boolean
      node-size:
        description: Size of the self-hosted node (one of medium, large or xlarge) to run the integration tests
        type: string
        required: false
        default: large
      tox-integration-test-targets:
        description: Comma separated list of tox targets needed to perform integration-tests
        type: string
        required: false
        default: integration

jobs:
  build:
    name: Build charm
    uses: ./.github/workflows/_charm-build.yaml
    with:
      use-charmcraftcache: ${{ inputs.use-charmcraftcache }}

  node-size-validation:
    runs-on: ubuntu-latest
    name: Input Node Size validation
    steps:
      - name: Validate node size variable
        if: ${{ !contains(fromJSON('["medium", "large", "xlarge"]'), inputs.node-size) }}
        run: exit 1

  integration-test:
    name: Integration Tests (microk8s)
    runs-on: [self-hosted, amd64, "${{ inputs.node-size }}", jammy]
    needs:
      - build
      - node-size-validation
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Setup operator environment (microk8s)
        uses: charmed-kubernetes/actions-operator@main
        with:
          juju-channel: 3.6/stable
          provider: microk8s
          channel: 1.32-strict/stable
          microk8s-addons: "dns hostpath-storage metallb:10.64.140.43-10.64.140.49"

      - name: Get charm info
        id: get-charm-info
        run: |
          echo charm-name=$(cat charmcraft.yaml | yq '.name') >> $GITHUB_OUTPUT

      - name: Set CHARM_PATH envvar
        run: echo "CHARM_PATH=${{ github.workspace }}/${{ needs.build.outputs.charm-paths }}" >> $GITHUB_ENV

      - name: Download charm artifact
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4
        with:
          name: ${{ github.sha }}-build

      - name: Run integration tests
        run: tox -e ${{ inputs.tox-integration-test-targets }} -- --model testing

      - name: Get contexts
        if: failure()
        run: kubectl config view

      - name: Get juju status
        if: failure()
        run: juju status --relations

      - name: Dump logs
        if: failure()
        uses: canonical/charming-actions/dump-logs@main

      - name: Get juju logs for the charm
        if: ${{ failure() }}
        run: juju debug-log --replay --include ${{ steps.get-charm-info.outputs.charm-name }}/0

      - name: Get container logs
        if: ${{ failure() && (inputs.container-name != '') }}
        run: kubectl logs ${{ steps.get-charm-info.outputs.charm-name }}-0 -c ${{ inputs.container-name }} -n testing

      # Hack to overcome lack of tools (cat, tar) in the workload container
      - name: Get config file
        if: ${{ failure() && (inputs.charm-config-path != '') && (inputs.container-name != '') }}
        run: |
           juju ssh ${{ steps.get-charm-info.outputs.charm-name }}/0 "PYTHONPATH=agents/unit-${{ steps.get-charm-info.outputs.charm-name }}-0/charm/venv/ python3 -c '
           from ops import pebble
           p = pebble.Client(\"/charm/containers/${{ inputs.container-name }}/pebble.socket\")
           f = p.pull(\"${{ inputs.charm-config-path }}\")
           print(f.read())
           '"
